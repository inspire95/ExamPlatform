{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/my-dash.component.css","webpack:///./src/app/components/dashboard/my-dash.component.html","webpack:///./src/app/components/dashboard/my-dash.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/nav/my-nav.component.css","webpack:///./src/app/components/nav/my-nav.component.html","webpack:///./src/app/components/nav/my-nav.component.ts","webpack:///./src/app/components/tables/my-table-datasource.ts","webpack:///./src/app/components/tables/my-table.component.css","webpack:///./src/app/components/tables/my-table.component.html","webpack:///./src/app/components/tables/my-table.component.ts","webpack:///./src/app/components/test-gen/test-gen.component.css","webpack:///./src/app/components/test-gen/test-gen.component.html","webpack:///./src/app/components/test-gen/test-gen.component.ts","webpack:///./src/app/components/test/test.component.css","webpack:///./src/app/components/test/test.component.html","webpack:///./src/app/components/test/test.component.ts","webpack:///./src/app/components/user-new/user-new.component.css","webpack:///./src/app/components/user-new/user-new.component.html","webpack:///./src/app/components/user-new/user-new.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/services/tests.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".pt-64 {\\r\\n    padding-top: 64px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wdC02NCB7XHJcbiAgICBwYWRkaW5nLXRvcDogNjRweDtcclxufSJdfQ== */\"","module.exports = \"<my-nav>\\r\\n  <div class=\\\"pt-64\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</my-nav>\\r\\n\"","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ExamPlatform';\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser'\r\nimport { NgModule } from '@angular/core'\r\n\r\nimport { AppComponent } from './app.component'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { HttpModule } from '@angular/http'; \r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\n\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatDialogModule,\r\n\r\n} from '@angular/material'\r\nimport { MyNavComponent } from './components/nav/my-nav.component'\r\nimport { LayoutModule } from '@angular/cdk/layout'\r\nimport { MyDashComponent } from './components/dashboard/my-dash.component'\r\nimport { MyTableComponent } from './components/tables/my-table.component'\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { TestComponent } from './components/test/test.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { UserNewComponent } from './components/user-new/user-new.component';\r\nimport { TestGenComponent } from './components/test-gen/test-gen.component';\r\nconst appRoutes: Routes = [\r\n\r\n  { path: '', component: MyDashComponent },\r\n  { path: 'users', component: UsersComponent },\r\n  { path: 'tests', component: TestComponent },\r\n  { path: 'new-user', component: UserNewComponent },\r\n  { path: 'test-gen', component: TestGenComponent }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MyNavComponent,\r\n    MyDashComponent,\r\n    MyTableComponent,\r\n    LoginComponent,\r\n    TestComponent,\r\n    UsersComponent,\r\n    UserNewComponent,\r\n    TestGenComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }","module.exports = \".grid-container {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.dashboard-card\\r\\n {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n  background:#262626;\\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbXktZGFzaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtDQUNkOztBQUVEOztFQUVFLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9teS1kYXNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gIG1hcmdpbjogMjBweDtcclxufVxyXG5cclxuLmRhc2hib2FyZC1jYXJkXHJcbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMTVweDtcclxuICBsZWZ0OiAxNXB4O1xyXG4gIHJpZ2h0OiAxNXB4O1xyXG4gIGJvdHRvbTogMTVweDtcclxuICBiYWNrZ3JvdW5kOiMyNjI2MjY7XHJcbn1cclxuXHJcbi5tb3JlLWJ1dHRvbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNXB4O1xyXG4gIHJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uZGFzaGJvYXJkLWNhcmQtY29udGVudCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"grid-container\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">Home</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{card.title}}\\r\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\r\\n              <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n              <button mat-menu-item>Expand</button>\\r\\n              <button mat-menu-item>Remove</button>\\r\\n            </mat-menu>\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <div>Card Content Here</div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-dash',\r\n  templateUrl: './my-dash.component.html',\r\n  styleUrls: ['./my-dash.component.css']\r\n})\r\nexport class MyDashComponent {\r\n  cards = [\r\n    { title: 'Card 1', cols: 2, rows: 1 },\r\n    { title: 'Card 2', cols: 1, rows: 1 },\r\n    { title: 'Card 3', cols: 1, rows: 2 },\r\n    { title: 'Card 4', cols: 1, rows: 1 }\r\n  ];\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  login works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  background: rgba(66,66,66, 0.99)\\r\\n  \\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  \\r\\n  width: 150px;\\r\\n  box-shadow: 3px 0 6px rgba(29, 28, 28, 0.678);\\r\\n  \\r\\n}\\r\\n\\r\\n.fixed-toolbar {\\r\\n  width: 100%;\\r\\n  position: fixed;\\r\\n  z-index: 3;\\r\\n  \\r\\n}\\r\\n\\r\\n.main-div\\r\\n{\\r\\n  margin: 0 auto;\\r\\n  height: 72px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.login{\\r\\n  float: right;\\r\\n    margin: 0px 0 0% 780px;\\r\\n    padding: 10px 30px 11px 30px;\\r\\n    align-items: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXYvbXktbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLGdDQUFnQzs7Q0FFakM7O0FBRUQ7O0VBRUUsYUFBYTtFQUNiLDhDQUE4Qzs7Q0FFL0M7O0FBRUQ7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFdBQVc7O0NBRVo7O0FBQ0Q7O0VBRUUsZUFBZTtFQUNmLGFBQWE7RUFDYixjQUFjO0VBQ2Qsd0JBQXdCO0VBQ3hCLG9CQUFvQjtDQUNyQjs7QUFFRDtFQUNFLGFBQWE7SUFDWCx1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLG1CQUFtQjtDQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2L215LW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZDogcmdiYSg2Niw2Niw2NiwgMC45OSlcclxuICBcclxufVxyXG5cclxuLnNpZGVuYXYge1xyXG4gIFxyXG4gIHdpZHRoOiAxNTBweDtcclxuICBib3gtc2hhZG93OiAzcHggMCA2cHggcmdiYSgyOSwgMjgsIDI4LCAwLjY3OCk7XHJcbiAgXHJcbn1cclxuXHJcbi5maXhlZC10b29sYmFyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgei1pbmRleDogMztcclxuICBcclxufVxyXG4ubWFpbi1kaXZcclxue1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGhlaWdodDogNzJweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2dpbntcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgICBtYXJnaW46IDBweCAwIDAlIDc4MHB4O1xyXG4gICAgcGFkZGluZzogMTBweCAzMHB4IDExcHggMzBweDtcclxuICAgIGFsaWduLWl0ZW1zOiByaWdodDtcclxufSJdfQ== */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav\\r\\n    #drawer\\r\\n    class=\\\"sidenav\\\"\\r\\n    fixedInViewport=\\\"true\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar color=\\\"\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item routerLink=\\\"/\\\">Home</a>\\r\\n      <a mat-list-item routerLink=\\\"/users\\\">Users</a>\\r\\n      <a mat-list-item routerLink=\\\"/tests\\\">Tests</a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"\\\" class=\\\"fixed-toolbar mat-elevation-z2\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">Menu</mat-icon>\\r\\n      </button>\\r\\n      <span ><img class=\\\"main-div\\\" src=\\\"./../assets/img/logo.png\\\"alt=\\\"logo\\\"></span>\\r\\n      <span><button class=\\\"login\\\" mat-button>Login!</button></span>\\r\\n    </mat-toolbar>\\r\\n    \\r\\n    <ng-content></ng-content>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'my-nav',\r\n  templateUrl: './my-nav.component.html',\r\n  styleUrls: ['./my-nav.component.css']\r\n})\r\nexport class MyNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n    \r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n  \r\n  }\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface MyTableItem {\r\n  LastName: string;\r\n  FirstName: string;\r\n  Email: string;\r\n  UserId: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: MyTableItem[] = [\r\n  {UserId: 1, LastName: 'Urban', FirstName: 'Dawid', Email: 'dawidurbna@o2.pl'},\r\n  {UserId: 2, LastName: 'Milo', FirstName: 'Grzegorz', Email: 'dawid@o2.pl'},\r\n  {UserId: 3, LastName: 'Głowik', FirstName: 'Sebastian', Email: 'dawidu@o2.pl'},\r\n  {UserId: 4, LastName: 'Kolonus', FirstName: 'Kamil', Email: 'daw@o2.pl'},\r\n  \r\n];\r\n\r\n/**\r\n * Data source for the MyTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class MyTableDataSource extends DataSource<MyTableItem> {\r\n  data: MyTableItem[] = EXAMPLE_DATA;\r\n\r\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<MyTableItem[]> {\r\n    // Combine everything that affects the rendered data into one update\r\n    // stream for the data-table to consume.\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n\r\n    // Set the paginators length\r\n    this.paginator.length = this.data.length;\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: MyTableItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: MyTableItem[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'LastName': return compare(a.LastName, b.LastName, isAsc);\r\n        case 'FirstName': return compare(a.FirstName, b.FirstName, isAsc);\r\n        case 'Email': return compare(a.Email, b.Email, isAsc);\r\n        case 'UserId': return compare(+a.UserId, +b.UserId, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a, b, isAsc) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFibGVzL215LXRhYmxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <!-- UserId -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>UserId</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\n    </ng-container>\\n\\n    <!-- LastName Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>LastName</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\n    </ng-container>\\n    \\n    <!--  FirstName Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>FirstName</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\n    </ng-container>\\n    \\n    <!-- Email Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\n    </ng-container>\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[10, 25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { MyTableDataSource } from './my-table-datasource';\r\nimport {Http} from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'my-table',\r\n  templateUrl: './my-table.component.html',\r\n  styleUrls: ['./my-table.component.css']\r\n})\r\nexport class MyTableComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dataSource: MyTableDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['LastName', 'FirstName','Email','UserId'];\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MyTableDataSource(this.paginator, this.sort);\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n.example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n.button {\\r\\nmargin-top: 25px;\\r\\nmargin-bottom: 25px;\\r\\nmargin-right: 50px;\\r\\nmargin-left: 50px;\\r\\nbackground: #1e567e;\\r\\n}\\r\\n.form-group  {\\r\\n  width: 100%;\\r\\n  display: flex;\\r\\n  font-size:18px;\\r\\n  padding:3px 3px;\\r\\n  border-top-right-radius: 10px\\r\\n  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXN0LWdlbi90ZXN0LWdlbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtHQUNiO0FBQ0g7O0VBRUUsa0JBQWtCO0NBQ25CO0FBQ0Q7QUFDQSxpQkFBaUI7QUFDakIsb0JBQW9CO0FBQ3BCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsb0JBQW9CO0NBQ25CO0FBSUQ7RUFDRSxZQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsNkJBQTZCOztDQUU5QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVzdC1nZW4vdGVzdC1nZW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuLmV4YW1wbGUtYnV0dG9uLXJvdyBidXR0b24sXHJcbi5leGFtcGxlLWJ1dHRvbi1yb3cgYSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbn1cclxuLmJ1dHRvbiB7XHJcbm1hcmdpbi10b3A6IDI1cHg7XHJcbm1hcmdpbi1ib3R0b206IDI1cHg7XHJcbm1hcmdpbi1yaWdodDogNTBweDtcclxubWFyZ2luLWxlZnQ6IDUwcHg7XHJcbmJhY2tncm91bmQ6ICMxZTU2N2U7XHJcbn1cclxuXHJcblxyXG5cclxuLmZvcm0tZ3JvdXAgIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZvbnQtc2l6ZToxOHB4O1xyXG4gIHBhZGRpbmc6M3B4IDNweDtcclxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweFxyXG4gIFxyXG59Il19 */\"","module.exports = \"<h2>Generate New Test</h2>\\r\\nLista naszych kategori:\\r\\n<p>{{ categorytype.name }}</p>\\r\\n\\r\\n<hr><br><br>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"exampleInputPassword1\\\">Name: </label>\\r\\n  <input type=\\\"text\\\" class=\\\"form-control\\\"  placeholder=\\\"\\\">\\r\\n</div><br><br>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleFormControlSelect1\\\">Number of questions: </label>\\r\\n    <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\r\\n      <option>10</option>\\r\\n      <option>15</option>\\r\\n      <option>20</option>\\r\\n      <option>25</option>\\r\\n      <option>30</option>\\r\\n    </select>\\r\\n  </div><br><br>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleFormControlSelect1\\\">Closed questions: </label>\\r\\n    <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\r\\n      <option>5</option>\\r\\n      <option>10</option>\\r\\n      <option>15</option>\\r\\n      <option>20</option>\\r\\n      <option>25</option>\\r\\n    </select>\\r\\n  </div><br><br>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleFormControlSelect1\\\">Open questions: </label>\\r\\n      <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\r\\n        <option>5</option>\\r\\n        <option>10</option>\\r\\n        <option>15</option>\\r\\n        <option>20</option>\\r\\n        <option>25</option>\\r\\n      </select>\\r\\n    </div><br><br>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleFormControlSelect1\\\">Maximum time: </label>\\r\\n      <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\r\\n        <option>30</option>\\r\\n        <option>45</option>\\r\\n        <option>60</option>\\r\\n        <option>75</option>\\r\\n        <option>90</option>\\r\\n      </select>\\r\\n    </div><br><br>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleFormControlSelect2\\\">Test Category: </label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\">\\r\\n          <option>Angular</option>\\r\\n          <option>Java</option>\\r\\n          <option>C#</option>\\r\\n          <option>SQL</option>\\r\\n          <option>PHP</option>\\r\\n          <option>JavaScript</option>\\r\\n          <option>Ruby</option>\\r\\n        </select>\\r\\n        <button mat-button color=\\\"warn\\\">Add Category</button>\\r\\n      </div><br><br><br><br>\\r\\n\\r\\n<button class=\\\"button\\\" mat-raised-button (click) =\\\"openDialog()\\\">Generate</button>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\n\r\n@Component({\r\n  selector: 'test-gen',\r\n  templateUrl: './test-gen.component.html',\r\n  styleUrls: ['./test-gen.component.css']\r\n})\r\n\r\nexport class TestGenComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n.example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n.ctest {\\r\\nmargin-top: 25px;\\r\\nmargin-bottom: 25px;\\r\\nmargin-right: 50px;\\r\\nmargin-left: 50px;\\r\\nbackground: #1e567e;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXN0L3Rlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7R0FDYjtBQUNIOztFQUVFLGtCQUFrQjtDQUNuQjtBQUNEO0FBQ0EsaUJBQWlCO0FBQ2pCLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIsa0JBQWtCO0FBQ2xCLG9CQUFvQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVzdC90ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbi5leGFtcGxlLWJ1dHRvbi1yb3cgYnV0dG9uLFxyXG4uZXhhbXBsZS1idXR0b24tcm93IGEge1xyXG4gIG1hcmdpbi1yaWdodDogOHB4O1xyXG59XHJcbi5jdGVzdCB7XHJcbm1hcmdpbi10b3A6IDI1cHg7XHJcbm1hcmdpbi1ib3R0b206IDI1cHg7XHJcbm1hcmdpbi1yaWdodDogNTBweDtcclxubWFyZ2luLWxlZnQ6IDUwcHg7XHJcbmJhY2tncm91bmQ6ICMxZTU2N2U7XHJcbn0iXX0= */\"","module.exports = \"<button class='ctest' mat-button [matMenuTriggerFor]=\\\"menu\\\">Create New Test</button>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n  <button class='ntest' mat-menu-item>Create Test Manual</button>\\r\\n  <button class='ntest' mat-menu-item (click) =\\\"openDialog()\\\">Generate New Test</button>\\r\\n</mat-menu>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- UserId -->\\r\\n    <ng-container matColumnDef=\\\"UserId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.UserId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Last Name Column -->\\r\\n    <ng-container matColumnDef=\\\"LastName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- First Name Column -->\\r\\n    <ng-container matColumnDef=\\\"FirstName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> TotalPointSum </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TotalPointSum}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"Email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Time </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Time}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-raised-button>Edit</button>\\r\\n        <button mat-raised-button>Details</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\">Delete</button></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource, MatPaginator, MatSort, MatDialog} from '@angular/material';\nimport { TestGenComponent } from '../test-gen/test-gen.component';\nimport { TestsService} from '../../services/tests.service';\nimport { Test } from 'src/app/models/Test';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  constructor(private data: TestsService, public dialog: MatDialog) { }\n\n  displayedColumns: string[] = ['UserId', 'Name', 'TotalPointSum', 'Time', 'actions'];\n  dataSource = new MatTableDataSource<Test>(this.data.Tests);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  openDialog() {\n    console.log('aaaaaa');\n    let dialogRef = this.dialog.open(TestGenComponent, {\n    });\n    dialogRef.afterClosed().subscribe(result => {\n     console.log(`Dialog closed)`);\n    })\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n.example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n.button {\\r\\nmargin-top: 25px;\\r\\nmargin-bottom: 25px;\\r\\nmargin-right: 50px;\\r\\nmargin-left: 50px;\\r\\nbackground: #1e567e;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyLW5ldy91c2VyLW5ldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtHQUNiO0FBQ0g7O0VBRUUsa0JBQWtCO0NBQ25CO0FBQ0Q7QUFDQSxpQkFBaUI7QUFDakIsb0JBQW9CO0FBQ3BCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsb0JBQW9CO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyLW5ldy91c2VyLW5ldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4uZXhhbXBsZS1idXR0b24tcm93IGJ1dHRvbixcclxuLmV4YW1wbGUtYnV0dG9uLXJvdyBhIHtcclxuICBtYXJnaW4tcmlnaHQ6IDhweDtcclxufVxyXG4uYnV0dG9uIHtcclxubWFyZ2luLXRvcDogMjVweDtcclxubWFyZ2luLWJvdHRvbTogMjVweDtcclxubWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG5tYXJnaW4tbGVmdDogNTBweDtcclxuYmFja2dyb3VuZDogIzFlNTY3ZTtcclxufSJdfQ== */\"","module.exports = \"<p>\\r\\n  tutaj dodaj swoj komponent\\r\\n  </p>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'new-user',\r\n  templateUrl: './user-new.component.html',\r\n  styleUrls: ['./user-new.component.css']\r\n})\r\n\r\nexport class UserNewComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n.example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n.button {\\r\\nmargin-top: 25px;\\r\\nmargin-bottom: 25px;\\r\\nmargin-right: 50px;\\r\\nmargin-left: 50px;\\r\\nbackground: #1e567e;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtHQUNiO0FBQ0g7O0VBRUUsa0JBQWtCO0NBQ25CO0FBQ0Q7QUFDQSxpQkFBaUI7QUFDakIsb0JBQW9CO0FBQ3BCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsb0JBQW9CO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4uZXhhbXBsZS1idXR0b24tcm93IGJ1dHRvbixcclxuLmV4YW1wbGUtYnV0dG9uLXJvdyBhIHtcclxuICBtYXJnaW4tcmlnaHQ6IDhweDtcclxufVxyXG4uYnV0dG9uIHtcclxubWFyZ2luLXRvcDogMjVweDtcclxubWFyZ2luLWJvdHRvbTogMjVweDtcclxubWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG5tYXJnaW4tbGVmdDogNTBweDtcclxuYmFja2dyb3VuZDogIzFlNTY3ZTtcclxufSJdfQ== */\"","module.exports = \"<button class=\\\"button\\\" mat-raised-button (click) =\\\"openDialog()\\\">Create New User</button>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- UserId -->\\r\\n    <ng-container matColumnDef=\\\"UserId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.UserId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Last Name Column -->\\r\\n    <ng-container matColumnDef=\\\"LastName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.LastName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- First Name Column -->\\r\\n    <ng-container matColumnDef=\\\"FirstName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FirstName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"Email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email Address </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-raised-button>Edit</button>\\r\\n        <button mat-raised-button>Details</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\">Delete</button></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\r\nimport { UsersService } from 'src/app/services/users.service'\r\nimport { User } from 'src/app/models/User';\r\nimport { UserNewComponent } from '../user-new/user-new.component';\r\n\r\n@Component({\r\n  selector: 'users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\n\r\nexport class UsersComponent implements OnInit {\r\n  constructor(private data: UsersService, public dialog: MatDialog) { }\r\n\r\n  displayedColumns: string[] = ['UserId', 'LastName', 'FirstName', 'Email', 'actions'];\r\n  dataSource = new MatTableDataSource<User>(this.data.Users);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  openDialog() {\r\n    console.log('aaaaaa');\r\n    let dialogRef = this.dialog.open(UserNewComponent, {\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     console.log(`Dialog closed)`);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Test } from 'src/app/models/Test'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TestsService {\r\n\r\n  constructor() { }\r\n\r\n  Tests: Test[] = [\r\n    { UserId: 1, Name: 'Dawid Urban - Java', TotalPointSum: 15, Time: 55},\r\n    { UserId: 2, Name: 'Grzegorz Milo - ASP .Net', TotalPointSum: 15, Time: 55},\r\n    { UserId: 3, Name: 'Sebastian Głowik - FullStack', TotalPointSum: 15, Time: 55},\r\n    { UserId: 4, Name: 'Kamil Kolonus - SQL', TotalPointSum: 15, Time: 55},\r\n  ];\r\n}","import { Injectable } from '@angular/core';\r\nimport { User } from 'src/app/models/User'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UsersService {\r\n\r\n  constructor() { }\r\n\r\n  Users: User[] = [\r\n    { UserId: 1, LastName: 'Urban', FirstName: 'Dawid', Email: 'dawidurbna@o2.pl' },\r\n    { UserId: 2, LastName: 'Milo', FirstName: 'Grzegorz', Email: 'dawid@o2.pl' },\r\n    { UserId: 3, LastName: 'Głowik', FirstName: 'Sebastian', Email: 'dawidu@o2.pl' },\r\n    { UserId: 4, LastName: 'Kolonus', FirstName: 'Kamil', Email: 'daw@o2.pl' },\r\n  ];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}