{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/my-dash.component.css","webpack:///./src/app/components/dashboard/my-dash.component.html","webpack:///./src/app/components/dashboard/my-dash.component.ts","webpack:///./src/app/components/nav/my-nav.component.css","webpack:///./src/app/components/nav/my-nav.component.html","webpack:///./src/app/components/nav/my-nav.component.ts","webpack:///./src/app/components/tables/my-table-datasource.ts","webpack:///./src/app/components/tables/my-table.component.css","webpack:///./src/app/components/tables/my-table.component.html","webpack:///./src/app/components/tables/my-table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".pt-64 {\\r\\n    padding-top: 64px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wdC02NCB7XHJcbiAgICBwYWRkaW5nLXRvcDogNjRweDtcclxufSJdfQ== */\"","module.exports = \"<my-nav>\\r\\n  <div class=\\\"pt-64\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</my-nav>\\r\\n\"","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ExamPlatform';\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser'\r\nimport { NgModule } from '@angular/core'\r\n\r\nimport { AppComponent } from './app.component'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport {HttpModule} from '@angular/http'\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  \r\n} from '@angular/material'\r\nimport { MyNavComponent } from './components/nav/my-nav.component'\r\nimport { LayoutModule } from '@angular/cdk/layout'\r\nimport { MyDashComponent } from './components/dashboard/my-dash.component'\r\nimport { MyTableComponent } from './components/tables/my-table.component'\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  \r\n  { path: '', component: MyDashComponent},\r\n  { path: 'table', component: MyTableComponent }\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MyNavComponent,\r\n    MyDashComponent,\r\n    MyTableComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}","module.exports = \".grid-container {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.dashboard-card\\r\\n {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n  background:#262626;\\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbXktZGFzaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtDQUNkOztBQUVEOztFQUVFLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9teS1kYXNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gIG1hcmdpbjogMjBweDtcclxufVxyXG5cclxuLmRhc2hib2FyZC1jYXJkXHJcbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMTVweDtcclxuICBsZWZ0OiAxNXB4O1xyXG4gIHJpZ2h0OiAxNXB4O1xyXG4gIGJvdHRvbTogMTVweDtcclxuICBiYWNrZ3JvdW5kOiMyNjI2MjY7XHJcbn1cclxuXHJcbi5tb3JlLWJ1dHRvbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNXB4O1xyXG4gIHJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uZGFzaGJvYXJkLWNhcmQtY29udGVudCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"grid-container\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">Home</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{card.title}}\\r\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\r\\n              <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n              <button mat-menu-item>Expand</button>\\r\\n              <button mat-menu-item>Remove</button>\\r\\n            </mat-menu>\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <div>Card Content Here</div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-dash',\r\n  templateUrl: './my-dash.component.html',\r\n  styleUrls: ['./my-dash.component.css']\r\n})\r\nexport class MyDashComponent {\r\n  cards = [\r\n    { title: 'Card 1', cols: 2, rows: 1 },\r\n    { title: 'Card 2', cols: 1, rows: 1 },\r\n    { title: 'Card 3', cols: 1, rows: 2 },\r\n    { title: 'Card 4', cols: 1, rows: 1 }\r\n  ];\r\n}\r\n","module.exports = \".sidenav-container {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  background: rgba(66,66,66, 0.99)\\r\\n  \\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  \\r\\n  width: 150px;\\r\\n  box-shadow: 3px 0 6px rgba(29, 28, 28, 0.678);\\r\\n  \\r\\n}\\r\\n\\r\\n.fixed-toolbar {\\r\\n  width: 100%;\\r\\n  position: fixed;\\r\\n  z-index: 3;\\r\\n  \\r\\n}\\r\\n\\r\\n.main-div\\r\\n{\\r\\n  margin: 0 auto;\\r\\n  height: 72px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.login{\\r\\n  float: right;\\r\\n    margin: 0px 0 0% 780px;\\r\\n    padding: 10px 30px 11px 30px;\\r\\n    align-items: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXYvbXktbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLGdDQUFnQzs7Q0FFakM7O0FBRUQ7O0VBRUUsYUFBYTtFQUNiLDhDQUE4Qzs7Q0FFL0M7O0FBRUQ7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFdBQVc7O0NBRVo7O0FBQ0Q7O0VBRUUsZUFBZTtFQUNmLGFBQWE7RUFDYixjQUFjO0VBQ2Qsd0JBQXdCO0VBQ3hCLG9CQUFvQjtDQUNyQjs7QUFFRDtFQUNFLGFBQWE7SUFDWCx1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLG1CQUFtQjtDQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2L215LW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZDogcmdiYSg2Niw2Niw2NiwgMC45OSlcclxuICBcclxufVxyXG5cclxuLnNpZGVuYXYge1xyXG4gIFxyXG4gIHdpZHRoOiAxNTBweDtcclxuICBib3gtc2hhZG93OiAzcHggMCA2cHggcmdiYSgyOSwgMjgsIDI4LCAwLjY3OCk7XHJcbiAgXHJcbn1cclxuXHJcbi5maXhlZC10b29sYmFyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgei1pbmRleDogMztcclxuICBcclxufVxyXG4ubWFpbi1kaXZcclxue1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGhlaWdodDogNzJweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2dpbntcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgICBtYXJnaW46IDBweCAwIDAlIDc4MHB4O1xyXG4gICAgcGFkZGluZzogMTBweCAzMHB4IDExcHggMzBweDtcclxuICAgIGFsaWduLWl0ZW1zOiByaWdodDtcclxufSJdfQ== */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav\\r\\n    #drawer\\r\\n    class=\\\"sidenav\\\"\\r\\n    fixedInViewport=\\\"true\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar color=\\\"\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item routerLink=\\\"/\\\">Home</a>\\r\\n      <a mat-list-item routerLink=\\\"/table\\\">Users</a>\\r\\n      <a mat-list-item routerLink=\\\"/test\\\">Tests</a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"\\\" class=\\\"fixed-toolbar mat-elevation-z2\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">Menu</mat-icon>\\r\\n      </button>\\r\\n      <span ><img class=\\\"main-div\\\" src=\\\"./../assets/img/logo.png\\\"alt=\\\"logo\\\"></span>\\r\\n      <span><button class=\\\"login\\\" mat-button>Login!</button></span>\\r\\n    </mat-toolbar>\\r\\n    \\r\\n    <ng-content></ng-content>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'my-nav',\r\n  templateUrl: './my-nav.component.html',\r\n  styleUrls: ['./my-nav.component.css']\r\n})\r\nexport class MyNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n    \r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n  \r\n  }\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface MyTableItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: MyTableItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the MyTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class MyTableDataSource extends DataSource<MyTableItem> {\r\n  data: MyTableItem[] = EXAMPLE_DATA;\r\n\r\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<MyTableItem[]> {\r\n    // Combine everything that affects the rendered data into one update\r\n    // stream for the data-table to consume.\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n\r\n    // Set the paginators length\r\n    this.paginator.length = this.data.length;\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: MyTableItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: MyTableItem[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a, b, isAsc) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFibGVzL215LXRhYmxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\r\\n\\r\\n    <!-- Id Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">{{values}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator #paginator\\r\\n    [length]=\\\"dataSource.data.length\\\"\\r\\n    [pageIndex]=\\\"0\\\"\\r\\n    [pageSize]=\\\"50\\\"\\r\\n    [pageSizeOptions]=\\\"[10, 25, 50, 100, 250]\\\">\\r\\n  </mat-paginator>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { MyTableDataSource } from './my-table-datasource';\r\nimport {Http} from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'my-table',\r\n  templateUrl: './my-table.component.html',\r\n  styleUrls: ['./my-table.component.css']\r\n})\r\nexport class MyTableComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dataSource: MyTableDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MyTableDataSource(this.paginator, this.sort);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}